<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.leyuan.jiang.dao.XjqTriggerInfoMapper" >
  <resultMap id="BaseResultMap" type="com.leyuan.jiang.pojo.po.XjqTriggerInfo" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="job_group" property="jobGroup" jdbcType="INTEGER" />
    <result column="job_cron" property="jobCron" jdbcType="VARCHAR" />
    <result column="job_desc" property="jobDesc" jdbcType="VARCHAR" />
    <result column="add_time" property="addTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="author" property="author" jdbcType="VARCHAR" />
    <result column="alarm_email" property="alarmEmail" jdbcType="VARCHAR" />
    <result column="executor_route_strategy" property="executorRouteStrategy" jdbcType="VARCHAR" />
    <result column="executor_handler" property="executorHandler" jdbcType="VARCHAR" />
    <result column="executor_param" property="executorParam" jdbcType="VARCHAR" />
    <result column="executor_block_strategy" property="executorBlockStrategy" jdbcType="VARCHAR" />
    <result column="executor_fail_strategy" property="executorFailStrategy" jdbcType="VARCHAR" />
    <result column="glue_type" property="glueType" jdbcType="VARCHAR" />
    <result column="glue_remark" property="glueRemark" jdbcType="VARCHAR" />
    <result column="glue_updatetime" property="glueUpdatetime" jdbcType="TIMESTAMP" />
    <result column="child_jobkey" property="childJobkey" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.leyuan.jiang.pojo.po.XjqTriggerInfo" extends="BaseResultMap" >
    <result column="glue_source" property="glueSource" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, job_group, job_cron, job_desc, add_time, update_time, author, alarm_email, executor_route_strategy, 
    executor_handler, executor_param, executor_block_strategy, executor_fail_strategy, 
    glue_type, glue_remark, glue_updatetime, child_jobkey
  </sql>
  <sql id="Blob_Column_List" >
    glue_source
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.leyuan.jiang.pojo.po.XjqTriggerInfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from xjq_trigger_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.leyuan.jiang.pojo.po.XjqTriggerInfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from xjq_trigger_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from xjq_trigger_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from xjq_trigger_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.leyuan.jiang.pojo.po.XjqTriggerInfoExample" >
    delete from xjq_trigger_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.leyuan.jiang.pojo.po.XjqTriggerInfo" >
    insert into xjq_trigger_info (id, job_group, job_cron, 
      job_desc, add_time, update_time, 
      author, alarm_email, executor_route_strategy, 
      executor_handler, executor_param, executor_block_strategy, 
      executor_fail_strategy, glue_type, glue_remark, 
      glue_updatetime, child_jobkey, glue_source
      )
    values (#{id,jdbcType=INTEGER}, #{jobGroup,jdbcType=INTEGER}, #{jobCron,jdbcType=VARCHAR}, 
      #{jobDesc,jdbcType=VARCHAR}, #{addTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{author,jdbcType=VARCHAR}, #{alarmEmail,jdbcType=VARCHAR}, #{executorRouteStrategy,jdbcType=VARCHAR}, 
      #{executorHandler,jdbcType=VARCHAR}, #{executorParam,jdbcType=VARCHAR}, #{executorBlockStrategy,jdbcType=VARCHAR}, 
      #{executorFailStrategy,jdbcType=VARCHAR}, #{glueType,jdbcType=VARCHAR}, #{glueRemark,jdbcType=VARCHAR}, 
      #{glueUpdatetime,jdbcType=TIMESTAMP}, #{childJobkey,jdbcType=VARCHAR}, #{glueSource,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.leyuan.jiang.pojo.po.XjqTriggerInfo" >
    insert into xjq_trigger_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="jobGroup != null" >
        job_group,
      </if>
      <if test="jobCron != null" >
        job_cron,
      </if>
      <if test="jobDesc != null" >
        job_desc,
      </if>
      <if test="addTime != null" >
        add_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="author != null" >
        author,
      </if>
      <if test="alarmEmail != null" >
        alarm_email,
      </if>
      <if test="executorRouteStrategy != null" >
        executor_route_strategy,
      </if>
      <if test="executorHandler != null" >
        executor_handler,
      </if>
      <if test="executorParam != null" >
        executor_param,
      </if>
      <if test="executorBlockStrategy != null" >
        executor_block_strategy,
      </if>
      <if test="executorFailStrategy != null" >
        executor_fail_strategy,
      </if>
      <if test="glueType != null" >
        glue_type,
      </if>
      <if test="glueRemark != null" >
        glue_remark,
      </if>
      <if test="glueUpdatetime != null" >
        glue_updatetime,
      </if>
      <if test="childJobkey != null" >
        child_jobkey,
      </if>
      <if test="glueSource != null" >
        glue_source,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="jobGroup != null" >
        #{jobGroup,jdbcType=INTEGER},
      </if>
      <if test="jobCron != null" >
        #{jobCron,jdbcType=VARCHAR},
      </if>
      <if test="jobDesc != null" >
        #{jobDesc,jdbcType=VARCHAR},
      </if>
      <if test="addTime != null" >
        #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="author != null" >
        #{author,jdbcType=VARCHAR},
      </if>
      <if test="alarmEmail != null" >
        #{alarmEmail,jdbcType=VARCHAR},
      </if>
      <if test="executorRouteStrategy != null" >
        #{executorRouteStrategy,jdbcType=VARCHAR},
      </if>
      <if test="executorHandler != null" >
        #{executorHandler,jdbcType=VARCHAR},
      </if>
      <if test="executorParam != null" >
        #{executorParam,jdbcType=VARCHAR},
      </if>
      <if test="executorBlockStrategy != null" >
        #{executorBlockStrategy,jdbcType=VARCHAR},
      </if>
      <if test="executorFailStrategy != null" >
        #{executorFailStrategy,jdbcType=VARCHAR},
      </if>
      <if test="glueType != null" >
        #{glueType,jdbcType=VARCHAR},
      </if>
      <if test="glueRemark != null" >
        #{glueRemark,jdbcType=VARCHAR},
      </if>
      <if test="glueUpdatetime != null" >
        #{glueUpdatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="childJobkey != null" >
        #{childJobkey,jdbcType=VARCHAR},
      </if>
      <if test="glueSource != null" >
        #{glueSource,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.leyuan.jiang.pojo.po.XjqTriggerInfoExample" resultType="java.lang.Integer" >
    select count(*) from xjq_trigger_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update xjq_trigger_info
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.jobGroup != null" >
        job_group = #{record.jobGroup,jdbcType=INTEGER},
      </if>
      <if test="record.jobCron != null" >
        job_cron = #{record.jobCron,jdbcType=VARCHAR},
      </if>
      <if test="record.jobDesc != null" >
        job_desc = #{record.jobDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.addTime != null" >
        add_time = #{record.addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.author != null" >
        author = #{record.author,jdbcType=VARCHAR},
      </if>
      <if test="record.alarmEmail != null" >
        alarm_email = #{record.alarmEmail,jdbcType=VARCHAR},
      </if>
      <if test="record.executorRouteStrategy != null" >
        executor_route_strategy = #{record.executorRouteStrategy,jdbcType=VARCHAR},
      </if>
      <if test="record.executorHandler != null" >
        executor_handler = #{record.executorHandler,jdbcType=VARCHAR},
      </if>
      <if test="record.executorParam != null" >
        executor_param = #{record.executorParam,jdbcType=VARCHAR},
      </if>
      <if test="record.executorBlockStrategy != null" >
        executor_block_strategy = #{record.executorBlockStrategy,jdbcType=VARCHAR},
      </if>
      <if test="record.executorFailStrategy != null" >
        executor_fail_strategy = #{record.executorFailStrategy,jdbcType=VARCHAR},
      </if>
      <if test="record.glueType != null" >
        glue_type = #{record.glueType,jdbcType=VARCHAR},
      </if>
      <if test="record.glueRemark != null" >
        glue_remark = #{record.glueRemark,jdbcType=VARCHAR},
      </if>
      <if test="record.glueUpdatetime != null" >
        glue_updatetime = #{record.glueUpdatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.childJobkey != null" >
        child_jobkey = #{record.childJobkey,jdbcType=VARCHAR},
      </if>
      <if test="record.glueSource != null" >
        glue_source = #{record.glueSource,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update xjq_trigger_info
    set id = #{record.id,jdbcType=INTEGER},
      job_group = #{record.jobGroup,jdbcType=INTEGER},
      job_cron = #{record.jobCron,jdbcType=VARCHAR},
      job_desc = #{record.jobDesc,jdbcType=VARCHAR},
      add_time = #{record.addTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      author = #{record.author,jdbcType=VARCHAR},
      alarm_email = #{record.alarmEmail,jdbcType=VARCHAR},
      executor_route_strategy = #{record.executorRouteStrategy,jdbcType=VARCHAR},
      executor_handler = #{record.executorHandler,jdbcType=VARCHAR},
      executor_param = #{record.executorParam,jdbcType=VARCHAR},
      executor_block_strategy = #{record.executorBlockStrategy,jdbcType=VARCHAR},
      executor_fail_strategy = #{record.executorFailStrategy,jdbcType=VARCHAR},
      glue_type = #{record.glueType,jdbcType=VARCHAR},
      glue_remark = #{record.glueRemark,jdbcType=VARCHAR},
      glue_updatetime = #{record.glueUpdatetime,jdbcType=TIMESTAMP},
      child_jobkey = #{record.childJobkey,jdbcType=VARCHAR},
      glue_source = #{record.glueSource,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update xjq_trigger_info
    set id = #{record.id,jdbcType=INTEGER},
      job_group = #{record.jobGroup,jdbcType=INTEGER},
      job_cron = #{record.jobCron,jdbcType=VARCHAR},
      job_desc = #{record.jobDesc,jdbcType=VARCHAR},
      add_time = #{record.addTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      author = #{record.author,jdbcType=VARCHAR},
      alarm_email = #{record.alarmEmail,jdbcType=VARCHAR},
      executor_route_strategy = #{record.executorRouteStrategy,jdbcType=VARCHAR},
      executor_handler = #{record.executorHandler,jdbcType=VARCHAR},
      executor_param = #{record.executorParam,jdbcType=VARCHAR},
      executor_block_strategy = #{record.executorBlockStrategy,jdbcType=VARCHAR},
      executor_fail_strategy = #{record.executorFailStrategy,jdbcType=VARCHAR},
      glue_type = #{record.glueType,jdbcType=VARCHAR},
      glue_remark = #{record.glueRemark,jdbcType=VARCHAR},
      glue_updatetime = #{record.glueUpdatetime,jdbcType=TIMESTAMP},
      child_jobkey = #{record.childJobkey,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.leyuan.jiang.pojo.po.XjqTriggerInfo" >
    update xjq_trigger_info
    <set >
      <if test="jobGroup != null" >
        job_group = #{jobGroup,jdbcType=INTEGER},
      </if>
      <if test="jobCron != null" >
        job_cron = #{jobCron,jdbcType=VARCHAR},
      </if>
      <if test="jobDesc != null" >
        job_desc = #{jobDesc,jdbcType=VARCHAR},
      </if>
      <if test="addTime != null" >
        add_time = #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="author != null" >
        author = #{author,jdbcType=VARCHAR},
      </if>
      <if test="alarmEmail != null" >
        alarm_email = #{alarmEmail,jdbcType=VARCHAR},
      </if>
      <if test="executorRouteStrategy != null" >
        executor_route_strategy = #{executorRouteStrategy,jdbcType=VARCHAR},
      </if>
      <if test="executorHandler != null" >
        executor_handler = #{executorHandler,jdbcType=VARCHAR},
      </if>
      <if test="executorParam != null" >
        executor_param = #{executorParam,jdbcType=VARCHAR},
      </if>
      <if test="executorBlockStrategy != null" >
        executor_block_strategy = #{executorBlockStrategy,jdbcType=VARCHAR},
      </if>
      <if test="executorFailStrategy != null" >
        executor_fail_strategy = #{executorFailStrategy,jdbcType=VARCHAR},
      </if>
      <if test="glueType != null" >
        glue_type = #{glueType,jdbcType=VARCHAR},
      </if>
      <if test="glueRemark != null" >
        glue_remark = #{glueRemark,jdbcType=VARCHAR},
      </if>
      <if test="glueUpdatetime != null" >
        glue_updatetime = #{glueUpdatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="childJobkey != null" >
        child_jobkey = #{childJobkey,jdbcType=VARCHAR},
      </if>
      <if test="glueSource != null" >
        glue_source = #{glueSource,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.leyuan.jiang.pojo.po.XjqTriggerInfo" >
    update xjq_trigger_info
    set job_group = #{jobGroup,jdbcType=INTEGER},
      job_cron = #{jobCron,jdbcType=VARCHAR},
      job_desc = #{jobDesc,jdbcType=VARCHAR},
      add_time = #{addTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      author = #{author,jdbcType=VARCHAR},
      alarm_email = #{alarmEmail,jdbcType=VARCHAR},
      executor_route_strategy = #{executorRouteStrategy,jdbcType=VARCHAR},
      executor_handler = #{executorHandler,jdbcType=VARCHAR},
      executor_param = #{executorParam,jdbcType=VARCHAR},
      executor_block_strategy = #{executorBlockStrategy,jdbcType=VARCHAR},
      executor_fail_strategy = #{executorFailStrategy,jdbcType=VARCHAR},
      glue_type = #{glueType,jdbcType=VARCHAR},
      glue_remark = #{glueRemark,jdbcType=VARCHAR},
      glue_updatetime = #{glueUpdatetime,jdbcType=TIMESTAMP},
      child_jobkey = #{childJobkey,jdbcType=VARCHAR},
      glue_source = #{glueSource,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.leyuan.jiang.pojo.po.XjqTriggerInfo" >
    update xjq_trigger_info
    set job_group = #{jobGroup,jdbcType=INTEGER},
      job_cron = #{jobCron,jdbcType=VARCHAR},
      job_desc = #{jobDesc,jdbcType=VARCHAR},
      add_time = #{addTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      author = #{author,jdbcType=VARCHAR},
      alarm_email = #{alarmEmail,jdbcType=VARCHAR},
      executor_route_strategy = #{executorRouteStrategy,jdbcType=VARCHAR},
      executor_handler = #{executorHandler,jdbcType=VARCHAR},
      executor_param = #{executorParam,jdbcType=VARCHAR},
      executor_block_strategy = #{executorBlockStrategy,jdbcType=VARCHAR},
      executor_fail_strategy = #{executorFailStrategy,jdbcType=VARCHAR},
      glue_type = #{glueType,jdbcType=VARCHAR},
      glue_remark = #{glueRemark,jdbcType=VARCHAR},
      glue_updatetime = #{glueUpdatetime,jdbcType=TIMESTAMP},
      child_jobkey = #{childJobkey,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>